using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace MyProject.Migrations
{
    public partial class RealEstateDetail : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "RealEstateDetail",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ObjectName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    City = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Region = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Section = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Subsection = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PlaceNumber = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Area = table.Column<float>(type: "real", nullable: true),
                    RightsScope = table.Column<int>(type: "int", nullable: true),
                    AppendicesNames = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsLandOwner = table.Column<bool>(type: "bit", nullable: true),
                    LandOwner = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsOtherObligee = table.Column<bool>(type: "bit", nullable: true),
                    OtherObligee = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsRegisteredManager = table.Column<bool>(type: "bit", nullable: true),
                    RegisteredManager = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsOwnership = table.Column<bool>(type: "bit", nullable: true),
                    OwnershipType = table.Column<int>(type: "int", nullable: true),
                    IsOtherRights = table.Column<bool>(type: "bit", nullable: true),
                    OtherRightsTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsTrust = table.Column<bool>(type: "bit", nullable: true),
                    TrustContent = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsBaseRightsSettingBurden = table.Column<bool>(type: "bit", nullable: true),
                    BaseRightsSettingBurdenStatus = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsSettingOtherRights = table.Column<bool>(type: "bit", nullable: true),
                    SettingOtherRightsTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsRestrictingRegistration = table.Column<bool>(type: "bit", nullable: true),
                    RestrictingRegistrationTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OtherRestrictingRegistration = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsOtherBaseRightsItemBy254 = table.Column<bool>(type: "bit", nullable: true),
                    OtherBaseRightsItemBy254 = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsOtherBaseRightsItemRelated = table.Column<bool>(type: "bit", nullable: true),
                    OtherBaseRightsItemRelated = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsUseByConvention = table.Column<bool>(type: "bit", nullable: true),
                    UseByConventionContent = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsRespectivelyManage = table.Column<bool>(type: "bit", nullable: true),
                    IsRespectivelyManageBy826 = table.Column<bool>(type: "bit", nullable: true),
                    RespectivelyManageBy826Types = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RespectivelyManageBy826Content = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsRent = table.Column<bool>(type: "bit", nullable: true),
                    IsLend = table.Column<bool>(type: "bit", nullable: true),
                    RentLendStatus = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsOccupiedWithoutRights = table.Column<bool>(type: "bit", nullable: true),
                    OccupiedWithoutRightsStatus = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsPublicWay = table.Column<bool>(type: "bit", nullable: true),
                    PublicWayPlaceAppendice = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PublicWayArea = table.Column<float>(type: "real", nullable: true),
                    UrbanLandSection = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    NonUrbanLandSection = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    NonUrbanLandType = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UnKnownLandRegulationStatus = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BuildRate = table.Column<float>(type: "real", nullable: true),
                    VolumeRate = table.Column<float>(type: "real", nullable: true),
                    IsUrbanPlanningManual = table.Column<bool>(type: "bit", nullable: true),
                    DevelopMethodRestrictionsTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OtherDevelopMethodRestriction = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsBuildingRestrictedRegion = table.Column<bool>(type: "bit", nullable: true),
                    IsFarmLand = table.Column<bool>(type: "bit", nullable: true),
                    BuildFarmhouseTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FarmLandRegulation = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsMountLand = table.Column<bool>(type: "bit", nullable: true),
                    MountLandRestrictions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsBanningBuildByKeepSoilLaw = table.Column<bool>(type: "bit", nullable: true),
                    BanningBuildByKeepSoilLawRestrictions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsRiverRegion = table.Column<bool>(type: "bit", nullable: true),
                    RiverRegionRestrictions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDrainFacilityRegion = table.Column<bool>(type: "bit", nullable: true),
                    DrainFacilityRegionRestrictions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsNationalPark = table.Column<bool>(type: "bit", nullable: true),
                    NationalParkTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    NationalParkRestrictions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsDrinkingWaterSource = table.Column<bool>(type: "bit", nullable: true),
                    DrinkingWaterSourceTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DrinkingWaterSourceRestrictions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsWaterProtectionAreaByLaw = table.Column<bool>(type: "bit", nullable: true),
                    WaterProtectionAreaByLawRestrictions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsPolutedArea = table.Column<bool>(type: "bit", nullable: true),
                    PolutedAreaTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PolutedAreaRestrictions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TransactionType = table.Column<int>(type: "int", nullable: true),
                    TransactionPrice = table.Column<float>(type: "real", nullable: true),
                    PaymentMethod = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsLandValueAddedTax = table.Column<bool>(type: "bit", nullable: true),
                    LandValueAddedTax = table.Column<float>(type: "real", nullable: true),
                    IsLandTax = table.Column<bool>(type: "bit", nullable: true),
                    LandTax = table.Column<float>(type: "real", nullable: true),
                    IsStampDuty = table.Column<bool>(type: "bit", nullable: true),
                    StampDuty = table.Column<float>(type: "real", nullable: true),
                    IsOtherTax = table.Column<bool>(type: "bit", nullable: true),
                    OtherTax = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsConstructionBenefitFee = table.Column<bool>(type: "bit", nullable: true),
                    ConstructionBenefitFee = table.Column<float>(type: "real", nullable: true),
                    IsRegistrationFee = table.Column<bool>(type: "bit", nullable: true),
                    RegistrationFee = table.Column<float>(type: "real", nullable: true),
                    IsSurveyFee = table.Column<bool>(type: "bit", nullable: true),
                    SurveyFee = table.Column<float>(type: "real", nullable: true),
                    IsOtherProcessingFee = table.Column<bool>(type: "bit", nullable: true),
                    OtherProcessingFee = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsContractFee = table.Column<bool>(type: "bit", nullable: true),
                    ContractFee = table.Column<float>(type: "real", nullable: true),
                    IsOwnershipTransferAgencyFee = table.Column<bool>(type: "bit", nullable: true),
                    OwnershipTransferAgencyFee = table.Column<float>(type: "real", nullable: true),
                    IsOtherFee = table.Column<bool>(type: "bit", nullable: true),
                    OtherFee = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ChooseManageTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ManageMethod = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsBreachOfContractPunishment = table.Column<bool>(type: "bit", nullable: true),
                    BreachOfContractPunishment = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OtherTransactionItem = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SurroundingsAppendiceTypes = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Surroundings = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsCadastralMapRetest = table.Column<bool>(type: "bit", nullable: true),
                    IsCadastralMapRetestAnnouced = table.Column<bool>(type: "bit", nullable: true),
                    IsOutOfBoundsBuilding = table.Column<bool>(type: "bit", nullable: true),
                    OutOfBoundsBuildingStatus = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsCompulsoryAcquisition = table.Column<bool>(type: "bit", nullable: true),
                    CompulsoryAcquisitionArea = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsElectricityPower = table.Column<bool>(type: "bit", nullable: true),
                    IsTapWater = table.Column<bool>(type: "bit", nullable: true),
                    IsGas = table.Column<bool>(type: "bit", nullable: true),
                    IsDrainer = table.Column<bool>(type: "bit", nullable: true),
                    NonInfrastructureReason = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RealEstateBroker = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ContractDate = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RealEstateDetail", x => x.Id);
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "RealEstateDetail");
        }
    }
}
