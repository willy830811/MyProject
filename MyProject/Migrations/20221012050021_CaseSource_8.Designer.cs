// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyProject.Data;

#nullable disable

namespace MyProject.Migrations
{
    [DbContext(typeof(MyProjectContext))]
    [Migration("20221012050021_CaseSource_8")]
    partial class CaseSource_8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyProject.Models.CaseSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Agent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("BuildRate")
                        .HasColumnType("real");

                    b.Property<string>("CaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Environment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hold")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAerialPhoto")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCadastralMap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCurrentPhotos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTranscript")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUrbanPlanningManual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUseSection")
                        .HasColumnType("bit");

                    b.Property<int?>("LandCount")
                        .HasColumnType("int");

                    b.Property<string>("LandInventories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SellingAreaInPing")
                        .HasColumnType("real");

                    b.Property<float?>("SellingAreaInSquareMeter")
                        .HasColumnType("real");

                    b.Property<string>("Subsection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("TotalAreaInPing")
                        .HasColumnType("real");

                    b.Property<float?>("TotalAreaInSquareMeter")
                        .HasColumnType("real");

                    b.Property<float?>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<float?>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<string>("UpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UseSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ValueAddedTax")
                        .HasColumnType("real");

                    b.Property<float?>("VolumeRate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("CaseSource");
                });

            modelBuilder.Entity("MyProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("MyProject.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float?>("Area")
                        .HasColumnType("real");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegisterReason")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShareDenominator")
                        .HasColumnType("int");

                    b.Property<int?>("ShareNumerator")
                        .HasColumnType("int");

                    b.Property<string>("Subsection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("House");
                });

            modelBuilder.Entity("MyProject.Models.HouseUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseUser");
                });

            modelBuilder.Entity("MyProject.Models.Items.AppendixItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Base64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaseSourceId")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseSourceId");

                    b.ToTable("AppendixItem");
                });

            modelBuilder.Entity("MyProject.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Residence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("MyProject.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("AttachedArea")
                        .HasColumnType("real");

                    b.Property<string>("Balcony")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BringingType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BuildingFinishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusStation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Courtyard")
                        .HasColumnType("bit");

                    b.Property<string>("CreateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decorate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementarySchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElevatorCounts")
                        .HasColumnType("int");

                    b.Property<string>("FaceDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GasFacility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GiftAirCon")
                        .HasColumnType("int");

                    b.Property<bool?>("GiftBedding")
                        .HasColumnType("bit");

                    b.Property<bool?>("GiftCooker")
                        .HasColumnType("bit");

                    b.Property<int?>("GiftFridge")
                        .HasColumnType("int");

                    b.Property<bool?>("GiftGas")
                        .HasColumnType("bit");

                    b.Property<bool?>("GiftHeater")
                        .HasColumnType("bit");

                    b.Property<bool?>("GiftLiquorCabinet")
                        .HasColumnType("bit");

                    b.Property<string>("GiftOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GiftPhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("GiftPillar")
                        .HasColumnType("bit");

                    b.Property<bool?>("GiftSofa")
                        .HasColumnType("bit");

                    b.Property<int?>("GiftTV")
                        .HasColumnType("int");

                    b.Property<bool?>("GiftWallCabinet")
                        .HasColumnType("bit");

                    b.Property<bool?>("Guard")
                        .HasColumnType("bit");

                    b.Property<int?>("HallCounts")
                        .HasColumnType("int");

                    b.Property<float?>("HoldArea")
                        .HasColumnType("real");

                    b.Property<string>("JuniorHighSchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Leader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LetterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LightingFace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MRTStation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MainArea")
                        .HasColumnType("real");

                    b.Property<int?>("MainMaterial")
                        .HasColumnType("int");

                    b.Property<float?>("ManagementFee")
                        .HasColumnType("real");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Market")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NeiborCounts")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("OtherArea")
                        .HasColumnType("real");

                    b.Property<string>("OtherAreaDefine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherMainMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOutsideMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherPropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OutsideMaterial")
                        .HasColumnType("int");

                    b.Property<string>("Park")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Parking")
                        .HasColumnType("bit");

                    b.Property<float?>("ParkingArea")
                        .HasColumnType("real");

                    b.Property<int?>("ParkingEntrance")
                        .HasColumnType("int");

                    b.Property<float?>("ParkingFee")
                        .HasColumnType("real");

                    b.Property<float?>("ParkingPrice")
                        .HasColumnType("real");

                    b.Property<int?>("ParkingType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyType")
                        .HasColumnType("int");

                    b.Property<float?>("Rent")
                        .HasColumnType("real");

                    b.Property<DateTime?>("RentPeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RentPeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoadWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomCounts")
                        .HasColumnType("int");

                    b.Property<string>("Sales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SellingPrice")
                        .HasColumnType("real");

                    b.Property<float?>("SettingPrice")
                        .HasColumnType("real");

                    b.Property<float?>("SharedArea")
                        .HasColumnType("real");

                    b.Property<string>("SitDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("ToliteCounts")
                        .HasColumnType("int");

                    b.Property<float?>("TotalArea")
                        .HasColumnType("real");

                    b.Property<int?>("UnderGroundFloors")
                        .HasColumnType("int");

                    b.Property<float?>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<string>("UpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpperGroundFloors")
                        .HasColumnType("int");

                    b.Property<int?>("Use")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("MyProject.Models.RealEstateDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppendicesNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Area")
                        .HasColumnType("real");

                    b.Property<string>("BanningBuildByKeepSoilLawRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseRightsSettingBurdenStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreachOfContractPunishment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildFarmhouseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("BuildRate")
                        .HasColumnType("real");

                    b.Property<string>("ChooseManageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompulsoryAcquisitionArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ConstructionBenefitFee")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("ContractFee")
                        .HasColumnType("real");

                    b.Property<string>("CreateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DevelopMethodRestrictionsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrainFacilityRegionRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkingWaterSourceRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkingWaterSourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmLandRegulation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBanningBuildByKeepSoilLaw")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBaseRightsSettingBurden")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBreachOfContractPunishment")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBuildingRestrictedRegion")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCadastralMapRetest")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCadastralMapRetestAnnouced")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCompulsoryAcquisition")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConstructionBenefitFee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsContractFee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDrainFacilityRegion")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDrainer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDrinkingWaterSource")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsElectricityPower")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFarmLand")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLandOwner")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLandTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLandValueAddedTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLend")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMountLand")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNationalPark")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOccupiedWithoutRights")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtherBaseRightsItemBy254")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtherBaseRightsItemRelated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtherFee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtherObligee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtherProcessingFee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtherRights")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtherTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOutOfBoundsBuilding")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOwnership")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOwnershipTransferAgencyFee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPolutedArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublicWay")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRegisteredManager")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRegistrationFee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRespectivelyManage")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRespectivelyManageBy826")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRestrictingRegistration")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRiverRegion")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSettingOtherRights")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStampDuty")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSurveyFee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTapWater")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTrust")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUrbanPlanningManual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUseByConvention")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWaterProtectionAreaByLaw")
                        .HasColumnType("bit");

                    b.Property<string>("LandOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("LandTax")
                        .HasColumnType("real");

                    b.Property<float?>("LandValueAddedTax")
                        .HasColumnType("real");

                    b.Property<string>("ManageMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MountLandRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalParkRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalParkType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonInfrastructureReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonUrbanLandSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonUrbanLandType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupiedWithoutRightsStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBaseRightsItemBy254")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBaseRightsItemRelated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDevelopMethodRestriction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherObligee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProcessingFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRestrictingRegistration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRightsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTransactionItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutOfBoundsBuildingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("OwnershipTransferAgencyFee")
                        .HasColumnType("real");

                    b.Property<int?>("OwnershipType")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolutedAreaRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolutedAreaType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PublicWayArea")
                        .HasColumnType("real");

                    b.Property<string>("PublicWayPlaceAppendice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealEstateBroker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("RegistrationFee")
                        .HasColumnType("real");

                    b.Property<string>("RentLendStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespectivelyManageBy826Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespectivelyManageBy826Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestrictingRegistrationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RightsScope")
                        .HasColumnType("int");

                    b.Property<string>("RiverRegionRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingOtherRightsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("StampDuty")
                        .HasColumnType("real");

                    b.Property<string>("Subsection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surroundings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurroundingsAppendiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SurveyFee")
                        .HasColumnType("real");

                    b.Property<float?>("TransactionPrice")
                        .HasColumnType("real");

                    b.Property<int?>("TransactionType")
                        .HasColumnType("int");

                    b.Property<string>("TrustContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnKnownLandRegulationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrbanLandSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseByConventionContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("VolumeRate")
                        .HasColumnType("real");

                    b.Property<string>("WaterProtectionAreaByLawRestrictions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RealEstateDetail");
                });

            modelBuilder.Entity("MyProject.Models.Items.AppendixItem", b =>
                {
                    b.HasOne("MyProject.Models.CaseSource", "CaseSource")
                        .WithMany("AppendixItems")
                        .HasForeignKey("CaseSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseSource");
                });

            modelBuilder.Entity("MyProject.Models.CaseSource", b =>
                {
                    b.Navigation("AppendixItems");
                });
#pragma warning restore 612, 618
        }
    }
}
